<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxTextImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>